plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation('ch.qos.logback:logback-classic')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jdbc')
    implementation('org.springframework.boot:spring-boot-configuration-processor')

    implementation('org.flywaydb:flyway-core')
    runtimeOnly('org.postgresql:postgresql')
    implementation('org.springframework.kafka:spring-kafka')

    implementation('com.google.code.gson:gson')
    compileOnly('com.google.code.findbugs:jsr305')

    testImplementation('org.testcontainers:postgresql')
    testImplementation("org.testcontainers:kafka")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.kafka:spring-kafka-test")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}